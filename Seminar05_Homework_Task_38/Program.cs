// Задача 38.
/* Задайте массив вещественных чисел. Найдите разницу между максимальным и минимальным элементами массива.*/

try /* Блок обработки исключений.*/
{
    Console.WriteLine("Введите число количества элементов требуемого массива.");
    Console.WriteLine("Число должно быть целым и положительным.");
    int number = Convert.ToInt32(Console.ReadLine());

    Console.WriteLine("Скольео знаков после запятой Вы хотите видеть в элементах массива?");
    Console.WriteLine("Введите целое положительное число.");
    int n = Convert.ToInt32(Console.ReadLine()); /* Вывод на экран количества знаков после запятой.*/

    if (n < 0) /* Если ввели число, которое определяет количество знаков после запятой, меньшее нуля, то...*/
    {
        Console.WriteLine("Некорректный ввод данных. Введите целое положительное число.");//на экран
        return; /* Возврат к новому вводу числа знаков после запятой.*/
    }
    double[] array = new double[number];/*Создаем массив и укажем, что в нем (number) элементов.
    Тип double хранит число с плавающей точкой от ±5.0*10 в степени -324 до ±1.7*10 в степени 308.*/

    if (number == 0) /* Если число количества элементов требуемого массива рано нулю, то...*/
    {
        Console.WriteLine(" Массив не содержит элементов"); /* выводим на экран.*/
        return; /* Возвращаемся на исходную точку ввода количества элементов.*/
    }

    fillArray(array);     /*Вызываем метод заполнения массива,который мы описали ниже, 
                            с наименованием созданного массива (array). */
    printArray(array);    /*Вызываем метод вывода на печать, который мы описали ниже, 
                            с наименованием созданного массива (array). */
    MinMax(array);        /*Вызываем метод определения минимального  элемента массива, который мы
                            описали ниже, с наименованием созданного массива (array).*/

    // Метод заполнения массива дробными числами.
    void fillArray(double[] array, int from = 0, int to = 0) /*void-оператор, который ни чего не возвращает.
    FillArray (перевод-заполняющий массив)- наименование метода . array (перевод- массив)- аргумент 
    (любое слово), from (перевод- от)- начало диапозона заполнения массива, to (перевод- до)- конец
    диапозона заполнения массива.*/
    {
        Console.WriteLine("Введите целое число начала диапозона требуемого массива.");
        from = Convert.ToInt32(Console.ReadLine()); /* Вывод на экран переменной from.*/

        Console.WriteLine("Введите целое число конца диапозона требуемого массива.");
        to = Convert.ToInt32(Console.ReadLine());   /* Вывод на экран переменной to.*/

        Console.WriteLine(); /* Пустая строка для отделения от ответа при чтении на экране.*/

        if (from > to) (from, to) = (to, from);     /* Если число начала диапозона больше числа окончания 
                                                       диапозона, то поменяем их местами.*/

        for (int i = 0; i < array.Length; i++) /*Вводим переменную (i)- это позиция первого элемента массива.
        До тех пор, пока позиция элемента массива меньше длины массива, увеличиваем значение позиции 
        элемента на (1) при каждой итерации.*/
        {
            double fraction = new Random().Next(0, 10) / Math.Pow(10, n); /* Вводим переменную 
            (fraction- перевод-дробь), которая будет дробной частью числа массива. Она будет определяться
            случайными числами из диапозона от 0 до 10, не включая 10, делённое на 10 в степени (n),
            которое и определит количество знаков после запятой.*/

            if (n == 0) fraction = 0; /* Если ввели количество знаков после запятой равное нулю, 
            то присвоим дробной части числа ноль (будут вводиться только целые числа).*/

            array[i] = new Random().Next(from, to + 1) + fraction; /* Заполняем наш массив случайными
            числами от (from) до (to). Увеличиваем переменную конца диапозона случайных чисел на (1),
            так как, Random().Next(from, to) не включает последнюю цифру в диапозон. 
            Прибавим дробную часть (fraction).*/
        }
    }
    // Метод печати массива на экран.
    void printArray(double[] array)  /* PrintArray-печать массива. */
    {
        for (int i = 0; i < array.Length; i++) /* Вводим переменную (i)- это позиция первого элемента массива.
        До тех пор, пока позиция элемента массива меньше длины массива, увеличиваем значение позиции элемента
        на (1) при каждой итерации. */
        {
            if (i == 0) Console.Write($"[");   /* Если индекс элемента раве нулю, т.е. 
            (первый элемент массива), то на экран, сначала, выводим левую квадратную скобку.*/

            Console.Write($"{array[i]} ");     /* Выводим на экран, в одну строку, через пробел,
                                                  все элементы массива.*/

            if (i < array.Length - 1) Console.Write($". "); /* Если индекс элемента меньше длины 
            массива минус один, т.е. (последнего элемента массива), то ставим точку.*/

            if (i == array.Length - 1) Console.Write($"]"); /* Если индекс элемента равен длине 
            массива минус один, т.е. (последнему элементу массива), то ставим правую квадратную скобку.*/
        }
        Console.WriteLine(); /* Пустая строка для перехода на новую строку для вывода следующего ответа.*/
    }

    /* Метод определения минимального и максимального элементов массива (array).*/
    void MinMax(double[] array)
    {
        double min = array[0]; /* Вводим переменную (min)- это минимальный элемент массива. 
                                  Присвоим ему значение элемента массива с индексом (0).*/

        double max = array[0]; /* Вводим переменную (max)- это максимальный элемент массива. 
                                  Присвоим ему значение элемента массива с индексом (0).*/

        for (int i = 0; i < array.Length; i++) /* Вводим переменную (i)- это позиция первого элемента
        массива. До тех пор, пока позиция элемента массива меньше длины массива, увеличиваем значение
        позиции элемента на (1) при каждой итерации. */
        {
            if (min > array[i]) /* Если минимальный элемент больше текущего элемента, то...*/
            {
                min = array[i]; /* минимальному элементу присваивается значение текущего.*/
            }

            if (max < array[i]) /* Если максимальный элемент меньше текущего элемента, то...*/
            {
                max = array[i]; /* максимальному элементу присваивается значение текущего.*/
            }
        }
        Console.WriteLine($"Минимальный элемент массива равен {min}"); /*Выводим на экран.*/
        Console.WriteLine($"Максимальный элемент массива равен {max}"); /*Выводим на экран.*/
        /*Выводим на экран.*/
        Console.WriteLine($"Разница между максимальным и минимальным элементами массива равна {max - min}");
    }
}
catch /* Окончание блока обработки исключений.*/
{
    Console.WriteLine("Некорректный ввод данных.");
}

